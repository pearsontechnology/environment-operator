project: test
environments:
- name: environment1
  services:
  - name: service1_environment1
    namespace: environment-stg
    volumes:
    - name: vol1
      size: 1G
      path: /tmp/asd
      provisioning: manual
- name: environment2
  namespace: environment-dev
  services:
  - name: external_service
    external_url: www.test.com
    backend: testing
    limits:
      cpu: 1000m
      memory: 500Mi
    requests:
      cpu: 1000m
      memory: 500Mi
  - name: service1_environment2
    external_url:
      - www.test1.com
      - www.test2.com
    volumes:
    - name: vol1
      size: 1G
      path: /tmp/asd
      modes: ReadWriteMany
    limits:
      cpu: 1000m
      memory: 500Mi
    requests:
      cpu: 1000m
      memory: 500Mi
  - name: service2_environment2
  - name: testdb
    type: "neptune"
    version: "1.0.1.0.200264.0"
    options:
      ApplyImmediately: True
      db_instances:
        - db_name: "db01"
          db_instance_class: "db.r4.2xlarge"
        - db_name: "db02"
          db_instance_class: "db.r4.xlarge"
  - name: hpaservice
    application: gummybears
    version: 1
    requests:
      cpu: 500m
      memory: 100Mi
    hpa:
      min_replicas: 2
      max_replicas: 5
      metric:
        name: http_requests
        target_average_value: 10
  - name: annotated_service
    version: 1
    annotations:
      - name: prometheus.io/scrape
        value: true
      - name: prometheus.io/path
        value: /metrics
    limits:
      cpu: 1000m
      memory: 500Mi
  - name: annotated_service2
    annotations:
      - name: random_annotation
        value: ok_value
    requests:
      cpu: 500m
      memory: 100Mi
- name: environment3
  namespace: environment-dev
  services:
  - name: hpa-service
    namespace: environment-dev
    hpa:
      min_replicas: 2
      max_replicas: 5
      metric:
        name: http_requests
        target_average_value: 10
- name: environment4
  namespace: environment-mongo
  services:
  - name: mongo
    namespace: environment-mongo
    database_type: mongo
    version: 3.4
    replicas: 3
    port: 27017
    volumes:
      - name: mongo-persistent-storage
        path: /data/db
        modes: ReadWriteOnce
        size: 10G
- name: environment5
  namespace: environment-kafka
  services:
  - name: zookeeper
    type: zookeeper
    options:
      replicas: 3
      resources_limits_cpu: 500m
      resources_limits_memory: 512Mi
      resources_requests_cpu: 500m
      resources_requests_memory: 512Mi
  - type: kafka
    name: kafka
    options:
      replicas: 3
      zookeeperConnect: "zookeeper"
      resources_limits_cpu: 500m
      resources_limits_memory: 512Mi
      resources_requests_cpu: 500m
      resources_requests_memory: 512Mi
- name: environment6
  namespace: environment-postgres
  services:
  - type: postgres
    name: postgres
    version : 1.0
    options:
      version: 9.6.6
      replicas: 2
      multiaz: false
      dbinstanceclass: db.m4.large
      allocatedstorage: 200
- name: environment7
  namespace: environment-neptune
  services:
  - type: neptune
    name: neptune
    version : 1.0
    options:
      ApplyImmediately: True
      db_instances:
        - db_name: "db01"
          db_instance_class: "db.r4.2xlarge"
        - db_name: "db02"
          db_instance_class: "db.r4.xlarge"
        - db_name: "db03"
          db_instance_class: "db.r4.large"
        - db_name: "db04"
          db_instance_class: "db.r4.large"
- name: environment8
  namespace: environment-msk
  services:
  - type: msk
    name: msk
    options:
      instance_type: "kafka.m5.large"
      node_count: 1
      volume_size_gb: 100
      version: "1.1.1"
      monitoring_level: "PER_TOPIC_PER_BROKER"
- name: environment-helm
  namespace: environment-helm
  services:
  - type: helmChart
    name: helm-charts
    version: 5.7
    chart: akamai
    repo: https://admin:mRLHFpLjsDKjgHiHtQPbifIV2WWCAGpp@charts.prsn.io
    target_namespace: kube-system
    values_content: |-
      pipeline: not_a_test
      bitesize_environment: glp1
      region: us-east-2
      bitesize_environment_type: pre
    options:
      api_version: helm.kubedex.com/v1
- name: environment9
  namespace: environment-docdb
  services:
  - type: docdb
    name: docdb
    version : 1.0
- name: environment10
  namespace: environment-cb
  services:
  - type: cb
    name: cb
    version : 1.0
    options:
      use_mds: 1
      high_perf: 1
      instance_type: "r4.2xlarge"
      node_count: "2"
      data_size: 512
      query_instance_type: "c4.large"
      query_node_count: "1"
      query_data_size: 200
      index_instance_type: "r4.xlarge"
      index_node_count: "1"
      index_data_size: 512
- name: environment11
  namespace: environment11
  services:
  - name: customservice
    external_url:
    - www.my.external_url
    - www.another.url
    deployment:
      method: bluegreen
      active: green
- name: environment12
  namespace: environment-sqs
  services:
  - type: sqs
    name: sqs_queue_name
- name: environment13
  namespace: environment-dev
  gists_repository:
    remote: "https://github.com/pearsontechnology/environment-operator.git"
    branch: master
  gists:
     - name: "application-v1"
       path: "test/assets/k8s/application-v1.bitesize"
       type: configmap
     - name: "application-v2"
       path: "test/assets/k8s/application-v1.bitesize"
       type: configmap
  services:
  - name: init_svc
    volumes:
      - name: application-v2
        path: "/etc/config/application-v2.config"
        type: configmap
    init_containers:
      - application: init_1
        name: init1
        version: 1
        command:
          - sample1
        volumes:
          - name: application-v1
            path: "/etc/config/application-v1.config"
            type: configmap
      - application: init_2
        name: init2
        version: 1
        command:
          - sample2
        env: 
          - name: sample1
            value: sample1-value
          - secret: sample2
            value: sample2-value
          - name: sample3
            pod_field: sample3-value
- name: environment14
  namespace: environment-s3
  services:
  - type: s3
    name: s3_bucket_name
    options:
      bucket_region: "us-east-2"
      bucket_encryption: "aes-256"
